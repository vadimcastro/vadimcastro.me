# docker/docker-compose.dev.yml
services:
  frontend:
    build:
      context: ..
      dockerfile: docker/frontend/Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - PYTHONPATH=/app:/app/app
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_ADMIN_NAME=Vadim Castro
      - NEXT_PUBLIC_ADMIN_ROLE=Administrator
      - NEXT_PUBLIC_ADMIN_INITIALS=VC
    command: npm run dev
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
      
  api:
    command: >
      sh -c '
        echo "Running migrations..." &&
        /app/scripts/migrate.sh &&
        echo "Initializing database..." &&
        python3 /app/scripts/init_db.py &&
        echo "Starting server..." &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      '
    environment:
      - ENVIRONMENT=development
      - DEBUG=1
      - SECRET_KEY=v_zCh3CsteyB7qxN_0vUuFpEZpvGLxeCKgzLXXr4HsE
      - DATABASE_URL=postgresql://postgres:password@db:5432/vadimcastro
      - REDIS_URL=redis://redis:6379/0
      
    volumes:
      - ../backend/.env:/app/.env

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
        
  redis:
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
  redis_data: