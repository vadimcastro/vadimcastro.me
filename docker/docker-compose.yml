# docker/docker-compose.yml
version: '3.8'
services:
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        - APP_PATH=backend/app
    volumes:
      - ../backend/app:/app/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      
  frontend:
    build:
      context: ..
      dockerfile: docker/frontend/Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      
  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=vadimcastro
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 3
      
  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data  # Fixed: Changed to /data instead of postgres data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
  redis_data: