# docker/docker-compose.prod.yml
version: '3.8'
services:
  frontend:
    build:
      context: ..
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://206.81.2.168:8000
    # Explicitly no volumes - use built files only

  api:
    build:
      dockerfile: docker/Dockerfile
      context: ..
    command: >
      sh -c '
        echo "Running migrations..." &&
        /app/scripts/migrate.sh &&
        echo "Waiting for tables to be ready..." &&
        sleep 5 &&
        echo "Initializing database..." &&
        python3 /app/scripts/init_db.py || echo "Database init failed, continuing..." &&
        echo "Starting server..." &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000
      '
    ports:
      - "8000:8000"
    env_file:
      - ../.env.production.local
    environment:
      - PYTHONPATH=/app:/app/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:15
    env_file:
      - ../.env.production.local
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 3

  redis:
    image: redis:6
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
  redis_data: