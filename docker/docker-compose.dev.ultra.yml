# docker/docker-compose.dev.ultra.yml
# Ultra-fast development compose using vc-resume base images
services:
  frontend:
    image: vc-resume-frontend-base:latest
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - vadimcastro_frontend_node_modules:/app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_ADMIN_NAME=Vadim Castro
      - NEXT_PUBLIC_ADMIN_ROLE=Full Stack Developer
      - NEXT_PUBLIC_ADMIN_INITIALS=VC
    command: sh -c "npm run dev"
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000"]
      interval: 2s
      timeout: 1s
      retries: 2
      start_period: 3s
      
  api:
    image: vc-resume-backend-base:latest
    command: >
      sh -c '
        echo "⚡ Ultra startup - migrations..." &&
        /app/scripts/migrate.sh &&
        echo "⚡ Starting server..." &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      '
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=vadimcastro-me
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    env_file:
      - ../.env.development
    ports:
      - "8000:8000"  
    volumes:
      - ../backend:/app

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
        
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=vadimcastro-me
    ports:
      - "5432:5432"
    volumes:
      - vadimcastro_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 2
      start_period: 2s
      
  redis:
    image: redis:7-alpine
    command: redis-server --save ""
    ports:
      - "6379:6379"
    volumes:
      - vadimcastro_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 1s
      retries: 2
      start_period: 1s

volumes:
  vadimcastro_postgres_data:
  vadimcastro_redis_data:
  vadimcastro_frontend_node_modules: